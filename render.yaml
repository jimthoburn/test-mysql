# Change “myappname” throughout this file, to the name of your application.
services:
- type: pserv
  name: test-mysql
  env: docker
  plan: starter
  region: oregon
  autoDeploy: false
  dockerfilePath: ./mysql/Dockerfile
  dockerContext: ./mysql/
  disk:
    name: mysql
    mountPath: /var/lib/mysql
    # Pick a size for your disk. You can increase this size manually over time.
    sizeGB: 1
  envVars:
  - key: MYSQL_DATABASE
    value: myappname
  - key: MYSQL_USER
    value: myappname_user
  - key: MYSQL_PASSWORD
    generateValue: true
  - key: MYSQL_ROOT_PASSWORD
    generateValue: true
# - type: cron
#   name: myappname-mysql-backup
#   env: docker
#   plan: standard
#   region: oregon
#   autoDeploy: false
#   dockerfilePath: ./backups/Dockerfile
#   dockerContext: ./backups
#   schedule: "0 3 * * *"
#   envVars:
#   # Pick the region closest to your database.
#   # For example, `us-west-2` for the `oregon` region
#   - key: AWS_REGION
#     sync: false
#   # Pick a globally unique name for your bucket.
#   # For example, <my-amazon-username>-myappname-render-mysql-backups
#   - key: S3_BUCKET_NAME
#     sync: false
#   # Looks like "AKIAXXXXXXXXXXXXXXXX"
#   - key: AWS_ACCESS_KEY_ID
#     sync: false
#   - key: AWS_SECRET_ACCESS_KEY
#     sync: false
#   - key: MYSQL_HOST
#     fromService:
#       name: myappname-mysql
#       type: pserv
#       property: host
#   - key: MYSQL_DATABASE
#     fromService:
#       name: myappname-mysql
#       type: pserv
#       envVarKey: MYSQL_DATABASE
#   - key: MYSQL_USER
#     fromService:
#       name: myappname-mysql
#       type: pserv
#       envVarKey: MYSQL_USER
#   - key: MYSQL_PASSWORD
#     fromService:
#       name: myappname-mysql
#       type: pserv
#       envVarKey: MYSQL_PASSWORD
